<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc
       http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd">


    <context:property-placeholder location="classpath:util.properties" />

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.hsqldb.driverClass}"/>
        <property name="url" value="${jdbc.hsqldb.url}"/>
        <property name="username" value="${jdbc.hsqldb.username}"/>
        <property name="password" value="${jdbc.hsqldb.password}"/>
    </bean>

    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:dbschema.sql"/>
        <jdbc:script location="classpath:test-data.sql"/>
    </jdbc:initialize-database>

   <!--JPA Persistence Context and Entity Manager configuration -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
        <property name="packagesToScan" value="net.anviprojects.SpringMVCProject.mvc.bean"/>
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
             <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" >
                 <property name="generateDdl" value="true" />
                 <property name="showSql" value="true" />
             </bean>
         </property>
         <property name="jpaProperties">
             <props>
                 <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                 <prop key="hibernate.show_sql">true</prop>
                 <prop key="hibernate.format_sql">false</prop>
                 <prop key="hibernate.hbm2ddl.auto">update</prop>
             </props>
         </property>
    </bean>

    <!-- Automatic transaction participation -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

     <!-- Java mail configuration -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="username" value="${java.mail.username}"/>
        <property name="password" value="${java.mail.password}"/>
        <property name="port" value="465"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.starttls.required">true</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.host">${java.mail.host}</prop>
            </props>
        </property>
    </bean>

    <!-- Velocity email template config bean-->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="resourceLoaderPath" value="/WEB-INF/email-templates"/>
    </bean>


    <!-- Quartz scheduling configuration -->
    <task:annotation-driven/>
    
    <context:component-scan base-package="net.anviprojects.SpringMVCProject.mvc.scheduling"/>

    <!-- Quartz simple trigger-->
    <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="simpleQuartzJob"/>
        <property name="repeatInterval" value="30000"/>
        <property name="startDelay" value="10000"/>
    </bean>

    <!-- Quartz cron trigger-->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="quartzCronJob"/>
        <property name="cronExpression" value="0/7 * * * * ?"/>
    </bean>

    <!-- Quartz job -->
    <bean id="simpleQuartzJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="simpleQuartzTask"/>
        <property name="targetMethod" value="simpleTaskMethod"/>
    </bean>

    <!-- Quartz cron job -->
    <bean id="quartzCronJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="cronQuartzTask"/>
        <property name="targetMethod" value="cronTaskMethod"/>
    </bean>

    <!-- Quartz simple task -->
    <bean id="simpleQuartzTask" class="net.anviprojects.SpringMVCProject.mvc.quartz.QuartzTask"/>

    <!-- Quartz cron task -->
    <bean id="cronQuartzTask" class="net.anviprojects.SpringMVCProject.mvc.quartz.CronQuartzTask"/>

    <!-- Quartz Scheduler -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>
                <ref bean="simpleQuartzJob"/>
                <ref bean="quartzCronJob"/>
            </list>
        </property>
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
                <ref bean="cronTrigger"/>
            </list>
        </property>
    </bean>
</beans>